// Me : 
#include <iostream>
#include <string>

using namespace std;

// Units, tens, hundreds
// Hundreds Section

enum enUnitsNumbers{One=1,};

string GetTheUnitsNumbers(int Number)
{
	string arrUnitsNumber[19] = { "one", "two", "three", "four", "five", "six", "seven", "eight", "nine",
		"ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen" };
	return arrUnitsNumber[Number - 1];
}

string GetThetensNumbers(int Number)
{
	string arrUnitsNumber[27] = { "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety" };
	return arrUnitsNumber[Number - 1];
}

int ReverseNumber(int Number)
{
	int Remainder = 0, Number2 = 0;

	while (Number > 0)
	{
		Remainder = Number % 10;
		Number /= 10;
		Number2 = Number2 * 10 + Remainder;
	}
	return Number2;
}

string TransacteHundredsSection(int Number)
{
	string Transactions = " ";

}

int GetHundredsSection(int Number)
{
	Number = ReverseNumber(Number);
	string stNumber = to_string(Number);
	string HNumber = stNumber.substr(0, 3);
	
	return ReverseNumber(stoi(HNumber));
}

int CounteDigitsInNumber(int Number)
{
	int Remainder = 0, Counter = 0;

	while (Number > 0)
	{
		Remainder = Number % 10;
		Number /= 10;
		Counter++;
	}
	return Counter;
}

int ReadNumber(string Message)
{
	int Number = 0;

	cout << Message;
	cin >> Number;

	return Number;
}

int main()
{
	int Number = ReadNumber("Enter a Number ? ");
	int DigitsInNumber = CounteDigitsInNumber(Number);

	if (DigitsInNumber <= 3)
	{
		TransacteHundredsSection(GetHundredsSection(Number));
	}
	else if (DigitsInNumber <= 6)
	{

	}
	else if (DigitsInNumber <= 9)
	{

	}
	else if (DigitsInNumber <= 12)
	{

	}
	else
	{
		cout << "The Number is too bigue!!";
	}

	

	system("pause>0");
	return 0;
}
