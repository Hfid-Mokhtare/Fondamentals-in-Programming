// Me : 
#include <iostream>
#include <string>
#include <vector>
#include <fstream>

using namespace std;

struct sClient
{
	string AccountNumber;
	string PinCode;
	string Name;
	string Phone;
	double AccountBalance;
};

sClient ReadNewClient()
{
	sClient Client;

	cout << "Enter Account Number ?";
	getline(cin, Client.AccountNumber);

	cout << "Enter PinCode ?";
	getline(cin, Client.PinCode);

	cout << "Enter Name ?";
	getline(cin, Client.Name);

	cout << "Enter Phone ?";
	getline(cin, Client.Phone);

	cout << "Enter Account Balance ?";
	cin >> Client.AccountBalance;

	return Client;
}

string ConvertRecordToLine(sClient Client, string Seperator = "#//#")
{
	string stClientRecord = "";
	stClientRecord += Client.AccountNumber + Seperator;
	stClientRecord += Client.PinCode + Seperator;
	stClientRecord += Client.Name + Seperator;
	stClientRecord += Client.Phone + Seperator;
	stClientRecord += to_string(Client.AccountBalance);

	return stClientRecord;

}

int main()
{
	sClient Client;
	char AddMore;
	fstream MyFile;

	
	do
	{

	
		cout << "\nAdding New client : \n\n";
		Client = ReadNewClient();

		MyFile.open("Client Data.txt", ios::out | ios::app);
		if (MyFile.is_open())
		{
			MyFile << ConvertRecordToLine(Client) << endl;

			MyFile.close();
		}

		cout << "\nClient Added Successfully,do you want to add more clients ?(Y/N)";
		cin>> AddMore;
		cin.ignore(1, '\n');

	} while (AddMore == 'y' || AddMore == 'Y');


	return 0;
}

==============================================================================

// Prof :
#include <iostream>
#include <string>
#include <vector>
#include <fstream>

using namespace std;

const string ClientsFileName = "Clients.txt";

struct sClient
{
	string AccountNumber;
	string PinCode;
	string Name;
	string Phone;
	double AccountBalance;
};

sClient ReadNewClient()
{
	sClient Client;

	cout << "Enter Account Number ?";
	getline(cin >> ws, Client.AccountNumber);

	cout << "Enter PinCode ?";
	getline(cin, Client.PinCode);

	cout << "Enter Name ?";
	getline(cin, Client.Name);

	cout << "Enter Phone ?";
	getline(cin, Client.Phone);

	cout << "Enter Account Balance ?";
	cin >> Client.AccountBalance;

	return Client;
}

string ConvertRecordToLine(sClient Client, string Separator = "#//#")
{
	string stClientRecord = "";
	stClientRecord += Client.AccountNumber + Seperator;
	stClientRecord += Client.PinCode + Separator;
	stClientRecord += Client.Name + Separator;
	stClientRecord += Client.Phone + Separator;
	stClientRecord += to_string(Client.AccountBalance);

	return stClientRecord;

}

void AddDataLineToFile(string FileName, string stDataLine)
{
	fstream MyFile;
	MyFile.open(FileName, ios::out | ios::app);

	if (MyFile.is_open())
	{
		MyFile << stDataLine << endl;

		MyFile.close();
	}
}

void AddNewClients()
{
	sClient Client;
	Client = ReadNewClient();
	AddDataLineToFile(ClientsFileName, ConvertRecordToLine(Client));

}

void AddClients()
{
	char AddMore = 'Y';
	do
	{

		system("cls");
		cout << "\nAdding New client : \n\n";
		
		AddNewClients();
		cout << "\nClient Added Successfully,do you want to add more clients ?(Y/N)";
		cin >> AddMore;

	} while (toupper(AddMore) == 'Y');
}

int main()
{
	AddClients();

	system("pause>0");
	return 0;
}
